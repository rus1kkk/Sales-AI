name: sales_ai
services:
    backend:
        build:
            context: backend/docker/backend
        container_name: sales_ai_backend
        restart: unless-stopped
        env_file:
            - ./backend/.env
        volumes:
            - ./backend/:/backend/
            - ./backend/docker/backend/php-conf/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php-ini-overrides.ini
        networks:
            - network

    frontend:
        build:
            context: ./frontend/
            dockerfile: docker/Dockerfile
            target: production
        container_name: sales_ai_frontend
        restart: unless-stopped
        ports:
            - "3000:80"
        networks:
            - network

    db:
        build:
            context: backend/docker/db
        container_name: sales_ai_db
        restart: unless-stopped
        env_file:
            - ./backend/.env
        ports:
            - "${DB_PORT}:5432"
        environment:
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_DB: postgres
        volumes:
            - dbData:/var/lib/postgresql/data
        networks:
            - network

    redis:
        image: redis:7.4.3
        container_name: sales_ai_redis
        restart: unless-stopped
        volumes:
            - redisData:/data
        networks:
            - network

    redis-commander:
        container_name: sales_ai_redis-commander
        hostname: redis-commander
        image: rediscommander/redis-commander:latest
        restart: always
        environment:
            - REDIS_HOSTS=local_0:redis:6379:0,local_1:redis:6379:1,local_2:redis:6379:2
        ports:
            - "8081:8081"
        networks:
            - network

networks:
    network:
        name: sales_ai_network
        external: true

volumes:
    dbData:
        driver: local
    redisData:
        driver: local